{"version":3,"sources":["jquery-ascolorpicker-flat.es.js"],"names":["global","factory","define","amd","exports","require","mod","jQuery","AsColor","AsGradient","jqueryAscolorpickerFlatEs","this","_jquery","_jqueryAsColor","_jqueryAsGradient","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","conventToPercentage","n","createId","api","id","_jquery2","_jqueryAsColor2","_jqueryAsGradient2","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","DEFAULTS","namespace","readonly","skin","lang","hideInput","hideFireChange","keyboard","color","format","alphaConvert","shortenHex","hexUseName","reduceAlpha","nameDegradation","invalidValue","zeroAlphaAsTransparent","mode","onInit","onReady","onChange","onClose","onOpen","onApply","MODES","simple","trigger","clear","saturation","hue","alpha","palettes","complex","preview","hex","buttons","flat-design","gradient","Layouts","value","nameItem","newDropdown","currentDropdown","existDiv","find","addClass","append","size","defaults","direction","template","data","init","options","that","$","extend","$alpha","call","appendTo","$dropdown","$handle","$element","on","height","width","step","bindEvents","e","update","eventName","which","button","proxy","mousedown","offset","startY","pageY","top","move","startX","pageX","left","mousemove","position","mouseup","document","off","cach","Math","max","min","css","set","a","round","moveLeft","moveRight","moveUp","moveDown","_keyboard","attr","attach","up","down","right","detach","toHEX","destroy","$hex","val","$hue","hub","h","$saturation","x","y","undefined","s","v","HSLtoHEX","l","apply","cancel","applyText","cancelText","applyTemplate","cancelTemplate","getString","$buttons","$cancel","$apply","$trigger","$triggerInner","children","insertAfter","opened","close","open","toString","toRGBA","remove","$clear","info","$info","$r","$g","$b","$a","type","parseInt","parseFloat","isNaN","r","g","b","window","localStorage","item","colors","asColor","localKey","getLocal","setLocal","hasOwnProperty","unshift","list","each","console","log","$palettes","html","preventDefault","stopPropagation","get","rgba","inArray","pop","eq","prepend","jsonValue","JSON","stringify","parse","$preview","$current","$previous","updateCurrent","Gradient","classes","enable","marker","active","focus","isEnabled","initialized","current","settings","$doc","$wrap","$gradient","filter","angle","markers","wheel","bind","switchable","matchString","element","getById","_trigger","_updateInput","disable","originValue","overrideCore","isEmpty","stop","_setup","revertCore","_set","_this","render","background-image","toStringWithAngle","_this2","$markers","add","del","empty","self","is","keyCode","removeClass","getMarker","$marker","$to","prev","next","first","start","end","setPosition","_this3","$wheel","$pointer","_this4","wheelMove","getPosition","calAngle","setAngle","wheelMouseup","sqrt","deg","atan","abs","PI","pos","calPointer","sin","cos","$angle","blur","constructor","_last","string","reorder","fill","getCurrent","setCurrentById","insert","removeById","switchText","forceStandard","angleUseKeyword","emptyString","degradationFormat","cleanPosition","control","event","COMPONENTS","LOCALIZATIONS","en","AsColorPicker","firstOpen","disabled","initialed","expecificLayout","wrap","dropdown","input","mask","components","_components","eventType","_len","arguments","params","Array","_key","concat","NAMESPACE$1","onFunction","replace","word","substring","toUpperCase","events","split","join","_create","parent","prop","_bindEvent","_this5","$body","component","createByModesName","_this6","hidden","outerHeight","outerWidth","last","$mask","createMask","before","removeAttr","show"],"mappings":"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","file":"jquery-ascolorpicker-flat.min.js","sourcesContent":["/**\n* asColorPicker-flat v0.4.16\n* https://github.com/felipemengatto/jquery-asColorPicker-flat\n*\n* Copyright (c) undefined\n* Released under the LGPL-3.0 license\n*/\nimport $$1 from 'jquery';\nimport AsColor from 'jquery-asColor';\nimport AsGradient from 'jquery-asGradient';\n\nvar DEFAULTS = {\n  namespace: 'asColorPicker',\n  readonly: false,\n  skin: null,\n  lang: 'pt-br',\n  hideInput: true,\n  hideFireChange: true,\n  keyboard: false,\n  color: {\n    format: false,\n    alphaConvert: false,\n    shortenHex: false,\n    hexUseName: false,\n    reduceAlpha: true,\n    nameDegradation: 'HEX',\n    invalidValue: '',\n    zeroAlphaAsTransparent: true\n  },\n  mode: 'simple',\n  onInit: null,\n  onReady: null,\n  onChange: null,\n  onClose: null,\n  onOpen: null,\n  onApply: null\n};\n\nvar MODES = {\n  'simple': {\n    trigger: true,\n    clear: true,\n    saturation: true,\n    hue: true,\n    alpha: true\n  },\n  'palettes': {\n    trigger: true,\n    clear: true,\n    palettes: true\n  },\n  'complex': {\n    trigger: true,\n    clear: true,\n    preview: true,\n    palettes: true,\n    saturation: true,\n    hue: true,\n    alpha: true,\n    hex: true,\n    buttons: true\n  },\n  'flat-design': {\n    trigger: true,\n    clear: true,\n    preview: true,\n    hex: true,\n    palettes: true,\n    saturation: true,\n    hue: true,\n    buttons: true\n  },\n  'gradient': {\n    trigger: true,\n    clear: true,\n    preview: true,\n    palettes: true,\n    saturation: true,\n    hue: true,\n    alpha: true,\n    hex: true,\n    gradient: true\n  }\n};\n\nclass Layouts {\n\n  constructor() {\n  }\n\n  static createByModesName(mode, nameItem, newDropdown, currentDropdown) {\n\n    if (mode === 'flat-design') {\n\n      if (nameItem === 'preview' || nameItem === 'hex') {\n\n        var existDiv = currentDropdown.find(`.flat-design-preview`);\n\n        if (existDiv.length > 0) {\n          newDropdown = existDiv;\n        } else {\n          newDropdown = $$1('<div/>');\n          newDropdown.addClass(`flat-design-preview`);\n        }\n\n        currentDropdown.append(newDropdown);\n      }\n\n      if (nameItem === 'palettes') {\n        newDropdown = $$1('<div/>');\n        newDropdown.addClass(`flat-design-${nameItem}`);\n        currentDropdown.append('<h5 class=\"asColorPicker-dropdown-title\"> Cores Recentes: </h5>');\n        currentDropdown.append(newDropdown);\n      }\n\n      if (nameItem === 'saturation' || nameItem === 'hue' || nameItem === 'alpha') {\n\n        var existDiv = currentDropdown.find(`.flat-design-options`);\n\n        if (existDiv.length > 0) {\n          newDropdown = existDiv;\n        } else {\n          newDropdown = $$1('<div/>');\n          currentDropdown.append('<h5 class=\"asColorPicker-dropdown-title\"> Selecione uma nova cor: </h5>');\n          newDropdown.addClass(`flat-design-options`);\n        }\n\n        currentDropdown.append(newDropdown);\n      }\n\n    }\n\n    return newDropdown;\n  }\n}\n\n// alpha\nvar alpha = {\n  size: 150,\n\n  defaults: {\n    direction: 'vertical', // horizontal\n    template(namespace) {\n      return `<div class=\"${namespace}-alpha ${namespace}-alpha-${this.direction}\"><i></i></div>`;\n    }\n  },\n\n  data: {},\n\n  init: function(api, options) {\n    const that = this;\n\n    this.options = $.extend(this.defaults, options);\n    that.direction = this.options.direction;\n    this.api = api;\n\n    this.$alpha = $(this.options.template.call(that, api.namespace)).appendTo(api.$dropdown);\n    this.$handle = this.$alpha.find('i');\n\n    api.$element.on('asColorPicker::firstOpen', () => {\n      // init variable\n      if (that.direction === 'vertical') {\n        that.size = that.$alpha.height();\n      } else {\n        that.size = that.$alpha.width();\n      }\n      that.step = that.size / 360;\n\n      // bind events\n      that.bindEvents();\n      that.keyboard();\n    });\n\n    api.$element.on('asColorPicker::update asColorPicker::setup', (e, api, color) => {\n      that.update(color);\n    });\n  },\n\n  bindEvents: function() {\n    const that = this;\n    this.$alpha.on(this.api.eventName('mousedown'), e => {\n      const rightclick = (e.which) ? (e.which === 3) : (e.button === 2);\n      if (rightclick) {\n        return false;\n      }\n      $.proxy(that.mousedown, that)(e);\n    });\n  },\n\n  mousedown: function(e) {\n    const offset = this.$alpha.offset();\n    if (this.direction === 'vertical') {\n      this.data.startY = e.pageY;\n      this.data.top = e.pageY - offset.top;\n      this.move(this.data.top);\n    } else {\n      this.data.startX = e.pageX;\n      this.data.left = e.pageX - offset.left;\n      this.move(this.data.left);\n    }\n\n    this.mousemove = function(e) {\n      let position;\n      if (this.direction === 'vertical') {\n        position = this.data.top + (e.pageY || this.data.startY) - this.data.startY;\n      } else {\n        position = this.data.left + (e.pageX || this.data.startX) - this.data.startX;\n      }\n\n      this.move(position);\n      return false;\n    };\n\n    this.mouseup = function() {\n      $(document).off({\n        mousemove: this.mousemove,\n        mouseup: this.mouseup\n      });\n      if (this.direction === 'vertical') {\n        this.data.top = this.data.cach;\n      } else {\n        this.data.left = this.data.cach;\n      }\n\n      return false;\n    };\n\n    $(document).on({\n      mousemove: $.proxy(this.mousemove, this),\n      mouseup: $.proxy(this.mouseup, this)\n    });\n    return false;\n  },\n\n  move: function(position, alpha, update) {\n    position = Math.max(0, Math.min(this.size, position));\n    this.data.cach = position;\n    if (typeof alpha === 'undefined') {\n      alpha = 1 - (position / this.size);\n    }\n    alpha = Math.max(0, Math.min(1, alpha));\n    if (this.direction === 'vertical') {\n      this.$handle.css({\n        top: position\n      });\n    } else {\n      this.$handle.css({\n        left: position\n      });\n    }\n\n    if (update !== false) {\n      this.api.set({\n        a: Math.round(alpha * 100) / 100\n      });\n    }\n  },\n\n  moveLeft: function() {\n    const step = this.step;\n    const data = this.data;\n    data.left = Math.max(0, Math.min(this.width, data.left - step));\n    this.move(data.left);\n  },\n\n  moveRight: function() {\n    const step = this.step;\n    const data = this.data;\n    data.left = Math.max(0, Math.min(this.width, data.left + step));\n    this.move(data.left);\n  },\n\n  moveUp: function() {\n    const step = this.step;\n    const data = this.data;\n    data.top = Math.max(0, Math.min(this.width, data.top - step));\n    this.move(data.top);\n  },\n\n  moveDown: function() {\n    const step = this.step;\n    const data = this.data;\n    data.top = Math.max(0, Math.min(this.width, data.top + step));\n    this.move(data.top);\n  },\n\n  keyboard: function() {\n    let keyboard;\n    const that = this;\n    if (this.api._keyboard) {\n      keyboard = $.extend(true, {}, this.api._keyboard);\n    } else {\n      return false;\n    }\n\n    this.$alpha.attr('tabindex', '0').on('focus', function() {\n      if (this.direction === 'vertical') {\n        keyboard.attach({\n          up() {\n            that.moveUp();\n          },\n          down() {\n            that.moveDown();\n          }\n        });\n      } else {\n        keyboard.attach({\n          left() {\n            that.moveLeft();\n          },\n          right() {\n            that.moveRight();\n          }\n        });\n      }\n      return false;\n    }).on('blur', () => {\n      keyboard.detach();\n    });\n  },\n\n  update: function(color) {\n    const position = this.size * (1 - color.value.a);\n    this.$alpha.css('backgroundColor', color.toHEX());\n\n    this.move(position, color.value.a, false);\n  },\n\n  destroy: function() {\n    $(document).off({\n      mousemove: this.mousemove,\n      mouseup: this.mouseup\n    });\n  }\n};\n\n// hex\nvar hex = {\n  init: function(api) {\n    const template = `<input type=\"text\" class=\"${api.namespace}-hex\" /><button id=\"applyHex\" class=\"btn btn-h100 btn-secundary p-10\"> OK </button>`;\n    this.$hex = $(template).appendTo(api.$dropdown);\n\n    this.$hex.on('change', function() {\n      api.set(this.value);\n    });\n\n    const that = this;\n    api.$element.on('asColorPicker::update asColorPicker::setup', (e, api, color) => {\n      that.update(color);\n    });\n\n  },\n\n  update: function(color) {\n    this.$hex.val(color.toHEX());\n  }\n};\n\n// hue\nvar hue = {\n  size: 150,\n\n  defaults: {\n    direction: 'vertical', // horizontal\n    template() {\n      const namespace = this.api.namespace;\n      return `<div class=\"${namespace}-hue ${namespace}-hue-${this.direction}\"><i></i></div>`;\n    }\n  },\n\n  data: {},\n\n  init: function(api, options) {\n    const that = this;\n\n    this.options = $.extend(this.defaults, options);\n    this.direction = this.options.direction;\n    this.api = api;\n\n    this.$hue = $(this.options.template.call(that)).appendTo(api.$dropdown);\n    this.$handle = this.$hue.find('i');\n\n    api.$element.on('asColorPicker::firstOpen', () => {\n      // init variable\n      if (that.direction === 'vertical') {\n        that.size = that.$hue.height();\n      } else {\n        that.size = that.$hue.width();\n      }\n      that.step = that.size / 360;\n\n      // bind events\n      that.bindEvents(api);\n      that.keyboard(api);\n    });\n\n    api.$element.on('asColorPicker::update asColorPicker::setup', (e, api, color) => {\n      that.update(color);\n    });\n  },\n\n  bindEvents: function() {\n    const that = this;\n    this.$hue.on(this.api.eventName('mousedown'), e => {\n      const rightclick = (e.which) ? (e.which === 3) : (e.button === 2);\n      if (rightclick) {\n        return false;\n      }\n      $.proxy(that.mousedown, that)(e);\n    });\n  },\n\n  mousedown: function(e) {\n    const offset = this.$hue.offset();\n    if (this.direction === 'vertical') {\n      this.data.startY = e.pageY;\n      this.data.top = e.pageY - offset.top;\n      this.move(this.data.top);\n    } else {\n      this.data.startX = e.pageX;\n      this.data.left = e.pageX - offset.left;\n      this.move(this.data.left);\n    }\n\n    this.mousemove = function(e) {\n      let position;\n      if (this.direction === 'vertical') {\n        position = this.data.top + (e.pageY || this.data.startY) - this.data.startY;\n      } else {\n        position = this.data.left + (e.pageX || this.data.startX) - this.data.startX;\n      }\n\n      this.move(position);\n      return false;\n    };\n\n    this.mouseup = function() {\n      $(document).off({\n        mousemove: this.mousemove,\n        mouseup: this.mouseup\n      });\n      if (this.direction === 'vertical') {\n        this.data.top = this.data.cach;\n      } else {\n        this.data.left = this.data.cach;\n      }\n\n      return false;\n    };\n\n    $(document).on({\n      mousemove: $.proxy(this.mousemove, this),\n      mouseup: $.proxy(this.mouseup, this)\n    });\n\n    return false;\n  },\n\n  move: function(position, hub, update) {\n    position = Math.max(0, Math.min(this.size, position));\n    this.data.cach = position;\n    if (typeof hub === 'undefined') {\n      hub = (1 - position / this.size) * 360;\n    }\n    hub = Math.max(0, Math.min(360, hub));\n    if (this.direction === 'vertical') {\n      this.$handle.css({\n        top: position\n      });\n    } else {\n      this.$handle.css({\n        left: position\n      });\n    }\n    if (update !== false) {\n      this.api.set({\n        h: hub\n      });\n    }\n  },\n\n  moveLeft: function() {\n    const step = this.step;\n    const data = this.data;\n    data.left = Math.max(0, Math.min(this.width, data.left - step));\n    this.move(data.left);\n  },\n\n  moveRight: function() {\n    const step = this.step;\n    const data = this.data;\n    data.left = Math.max(0, Math.min(this.width, data.left + step));\n    this.move(data.left);\n  },\n\n  moveUp: function() {\n    const step = this.step;\n    const data = this.data;\n    data.top = Math.max(0, Math.min(this.width, data.top - step));\n    this.move(data.top);\n  },\n\n  moveDown: function() {\n    const step = this.step;\n    const data = this.data;\n    data.top = Math.max(0, Math.min(this.width, data.top + step));\n    this.move(data.top);\n  },\n\n  keyboard: function() {\n    let keyboard;\n    const that = this;\n    if (this.api._keyboard) {\n      keyboard = $.extend(true, {}, this.api._keyboard);\n    } else {\n      return false;\n    }\n\n    this.$hue.attr('tabindex', '0').on('focus', function() {\n      if (this.direction === 'vertical') {\n        keyboard.attach({\n          up() {\n            that.moveUp();\n          },\n          down() {\n            that.moveDown();\n          }\n        });\n      } else {\n        keyboard.attach({\n          left() {\n            that.moveLeft();\n          },\n          right() {\n            that.moveRight();\n          }\n        });\n      }\n      return false;\n    }).on('blur', () => {\n      keyboard.detach();\n    });\n  },\n\n  update: function(color) {\n    const position = (color.value.h === 0) ? 0 : this.size * (1 - color.value.h / 360);\n    this.move(position, color.value.h, false);\n  },\n\n  destroy: function() {\n    $(document).off({\n      mousemove: this.mousemove,\n      mouseup: this.mouseup\n    });\n  }\n};\n\n// saturation\nvar saturation = {\n  defaults: {\n    template(namespace) {\n      return `<div class=\"${namespace}-saturation\"><i><b></b></i></div>`;\n    }\n  },\n\n  width: 0,\n  height: 0,\n  size: 6,\n  data: {},\n\n  init: function(api, options) {\n    const that = this;\n    this.options = $.extend(this.defaults, options);\n    this.api = api;\n\n    //build element and add component to picker\n    this.$saturation = $(this.options.template.call(that, api.namespace)).appendTo(api.$dropdown);\n    this.$handle = this.$saturation.find('i');\n\n    api.$element.on('asColorPicker::firstOpen', () => {\n      // init variable\n      that.width = that.$saturation.width();\n      that.height = that.$saturation.height();\n      that.step = {\n        left: that.width / 20,\n        top: that.height / 20\n      };\n      that.size = that.$handle.width() / 2;\n\n      // bind events\n      that.bindEvents();\n      that.keyboard(api);\n    });\n\n    api.$element.on('asColorPicker::update asColorPicker::setup', (e, api, color) => {\n      that.update(color);\n    });\n  },\n\n  bindEvents: function() {\n    const that = this;\n\n    this.$saturation.on(this.api.eventName('mousedown'), e => {\n      const rightclick = (e.which) ? (e.which === 3) : (e.button === 2);\n      if (rightclick) {\n        return false;\n      }\n      that.mousedown(e);\n    });\n  },\n\n  mousedown: function(e) {\n    const offset = this.$saturation.offset();\n\n    this.data.startY = e.pageY;\n    this.data.startX = e.pageX;\n    this.data.top = e.pageY - offset.top;\n    this.data.left = e.pageX - offset.left;\n    this.data.cach = {};\n\n    this.move(this.data.left, this.data.top);\n\n    this.mousemove = function(e) {\n      const x = this.data.left + (e.pageX || this.data.startX) - this.data.startX;\n      const y = this.data.top + (e.pageY || this.data.startY) - this.data.startY;\n      this.move(x, y);\n      return false;\n    };\n\n    this.mouseup = function() {\n      $(document).off({\n        mousemove: this.mousemove,\n        mouseup: this.mouseup\n      });\n      this.data.left = this.data.cach.left;\n      this.data.top = this.data.cach.top;\n\n      return false;\n    };\n\n    $(document).on({\n      mousemove: $.proxy(this.mousemove, this),\n      mouseup: $.proxy(this.mouseup, this)\n    });\n\n    return false;\n  },\n\n  move: function(x, y, update) {\n    y = Math.max(0, Math.min(this.height, y));\n    x = Math.max(0, Math.min(this.width, x));\n\n    if (this.data.cach === undefined) {\n      this.data.cach = {};\n    }\n    this.data.cach.left = x;\n    this.data.cach.top = y;\n\n    this.$handle.css({\n      top: y - this.size,\n      left: x - this.size\n    });\n\n    if (update !== false) {\n      this.api.set({\n        s: x / this.width,\n        v: 1 - (y / this.height)\n      });\n    }\n  },\n\n  update: function(color) {\n    if (color.value.h === undefined) {\n      color.value.h = 0;\n    }\n    this.$saturation.css('backgroundColor', AsColor.HSLtoHEX({\n      h: color.value.h,\n      s: 1,\n      l: 0.5\n    }));\n\n    const x = color.value.s * this.width;\n    const y = (1 - color.value.v) * this.height;\n\n    this.move(x, y, false);\n  },\n\n  moveLeft: function() {\n    const step = this.step.left;\n    const data = this.data;\n    data.left = Math.max(0, Math.min(this.width, data.left - step));\n    this.move(data.left, data.top);\n  },\n\n  moveRight: function() {\n    const step = this.step.left;\n    const data = this.data;\n    data.left = Math.max(0, Math.min(this.width, data.left + step));\n    this.move(data.left, data.top);\n  },\n\n  moveUp: function() {\n    const step = this.step.top;\n    const data = this.data;\n    data.top = Math.max(0, Math.min(this.width, data.top - step));\n    this.move(data.left, data.top);\n  },\n\n  moveDown: function() {\n    const step = this.step.top;\n    const data = this.data;\n    data.top = Math.max(0, Math.min(this.width, data.top + step));\n    this.move(data.left, data.top);\n  },\n\n  keyboard: function() {\n    let keyboard;\n    const that = this;\n    if (this.api._keyboard) {\n      keyboard = $.extend(true, {}, this.api._keyboard);\n    } else {\n      return false;\n    }\n\n    this.$saturation.attr('tabindex', '0').on('focus', () => {\n      keyboard.attach({\n        left() {\n          that.moveLeft();\n        },\n        right() {\n          that.moveRight();\n        },\n        up() {\n          that.moveUp();\n        },\n        down() {\n          that.moveDown();\n        }\n      });\n      return false;\n    }).on('blur', () => {\n      keyboard.detach();\n    });\n  },\n\n  destroy: function() {\n    $(document).off({\n      mousemove: this.mousemove,\n      mouseup: this.mouseup\n    });\n  }\n};\n\n// buttons\nvar buttons = {\n  defaults: {\n    apply: true,\n    cancel: true,\n    applyText: null,\n    cancelText: null,\n    template(namespace) {\n      return `<div class=\"${namespace}-buttons\"></div>`;\n    },\n    applyTemplate(namespace) {\n      return `<a class=\"btn btn-outline-primary\" href=\"#\" alt=\"${this.options.applyText}\" class=\"${namespace}-buttons-apply\">${this.options.applyText}</a>`;\n    },\n    cancelTemplate(namespace) {\n      return `<a class=\"btn btn-outline-secundary\" href=\"#\" alt=\"${this.options.cancelText}\" class=\"${namespace}-buttons-apply\">${this.options.cancelText}</a>`;\n    }\n  },\n\n  init: function(api, options) {\n    const that = this;\n\n    this.options = $.extend(this.defaults, {\n      applyText: api.getString('applyText', 'apply'),\n      cancelText: api.getString('cancelText', 'cancel')\n    }, options);\n    this.$buttons = $(this.options.template.call(this, api.namespace)).appendTo(api.$dropdown);\n\n    api.$element.on('asColorPicker::firstOpen', () => {\n      if (that.options.cancel) {\n        that.$cancel = $(that.options.cancelTemplate.call(that, api.namespace)).appendTo(that.$buttons).on('click', () => {\n          api.cancel();\n          return false;\n        });\n      }\n      \n      if (that.options.apply) {\n        that.$apply = $(that.options.applyTemplate.call(that, api.namespace)).appendTo(that.$buttons).on('click', () => {\n          api.apply();\n          return false;\n        });\n      }\n    });\n  }\n};\n\n// trigger\nvar trigger = {\n  defaults: {\n    template(namespace) {\n      return `<div class=\"${namespace}-trigger\"><span></span></div>`;\n    }\n  },\n\n  init: function(api, options) {\n    this.options = $.extend(this.defaults, options);\n    api.$trigger = $(this.options.template.call(this, api.namespace));\n    this.$triggerInner = api.$trigger.children('span');\n\n    api.$trigger.insertAfter(api.$element);\n    api.$trigger.on('click', () => {\n      if (!api.opened) {\n        api.open();\n      } else {\n        api.close();\n      }\n      return false;\n    });\n    const that = this;\n    api.$element.on('asColorPicker::update', (e, api, color, gradient) => {\n      if (typeof gradient === 'undefined') {\n        gradient = false;\n      }\n      that.update(color, gradient);\n    });\n\n    this.update(api.color);\n  },\n\n  update: function(color, gradient) {\n    if (gradient) {\n      this.$triggerInner.css('background', gradient.toString(true));\n    } else {\n      this.$triggerInner.css('background', color.toRGBA());\n    }\n  },\n\n  destroy: function(api) {\n    api.$trigger.remove();\n  }\n};\n\n// clear\nvar clear = {\n  defaults: {\n    template(namespace) {\n      return `<a href=\"#\" class=\"${namespace}-clear\"></a>`;\n    }\n  },\n\n  init: function(api, options) {\n    if (api.options.hideInput) {\n      return;\n    }\n    this.options = $.extend(this.defaults, options);\n    this.$clear = $(this.options.template.call(this, api.namespace)).insertAfter(api.$element);\n\n    this.$clear.on('click', () => {\n      api.clear();\n      return false;\n    });\n  }\n};\n\n// info\nvar info = {\n  color: ['white', 'black', 'transparent'],\n\n  init: function(api) {\n    const template = `<ul class=\"${api.namespace}-info\"><li><label>R:<input type=\"text\" data-type=\"r\"/></label></li><li><label>G:<input type=\"text\" data-type=\"g\"/></label></li><li><label>B:<input type=\"text\" data-type=\"b\"/></label></li><li><label>A:<input type=\"text\" data-type=\"a\"/></label></li></ul>`;\n    this.$info = $(template).appendTo(api.$dropdown);\n    this.$r = this.$info.find('[data-type=\"r\"]');\n    this.$g = this.$info.find('[data-type=\"g\"]');\n    this.$b = this.$info.find('[data-type=\"b\"]');\n    this.$a = this.$info.find('[data-type=\"a\"]');\n\n    this.$info.on(api.eventName('keyup update change'), 'input', function(e) {\n      let val;\n      const type = $(e.target).data('type');\n      switch (type) {\n        case 'r':\n        case 'g':\n        case 'b':\n          val = parseInt(this.value, 10);\n          if (val > 255) {\n            val = 255;\n          } else if (val < 0) {\n            val = 0;\n          }\n          break;\n        case 'a':\n          val = parseFloat(this.value, 10);\n          if (val > 1) {\n            val = 1;\n          } else if (val < 0) {\n            val = 0;\n          }\n          break;\n        default:\n          break;\n      }\n      if (isNaN(val)) {\n        val = 0;\n      }\n      const color = {};\n      color[type] = val;\n      api.set(color);\n    });\n\n    const that = this;\n    api.$element.on('asColorPicker::update asColorPicker::setup', (e, color) => {\n      that.update(color);\n    });\n  },\n\n  update: function(color) {\n    this.$r.val(color.value.r);\n    this.$g.val(color.value.g);\n    this.$b.val(color.value.b);\n    this.$a.val(color.value.a);\n  }\n};\n\n// palettes\nfunction noop() {\n  return;\n}\nif (!window.localStorage) {\n  window.localStorage = noop;\n}\n\nvar palettes = {\n  defaults: {\n    template(namespace) {\n      return `<ul class=\"${namespace}-palettes\"></ul>`;\n    },\n    item(namespace, color) {\n      return `<li data-color=\"${color}\"><span style=\"background-color:${color}\" /></li>`;\n    },\n    colors: ['black', 'white'],\n    max: 10,\n    localStorage: true\n  },\n\n  init: function(api, options) {\n    const that = this;\n    let colors;\n    const asColor = AsColor();\n\n    this.options = $.extend(true, {}, this.defaults, options);\n    this.colors = [];\n    let localKey;\n\n    if (this.options.localStorage) {\n      localKey = `${api.namespace}_palettes_${api.id}`;\n      colors = this.getLocal(localKey);\n      if (!colors) {\n        colors = this.options.colors;\n        this.setLocal(localKey, colors);\n      }\n    } else {\n      colors = this.options.colors;\n    }\n\n    for (const i in colors) {\n      if(Object.hasOwnProperty.call(colors, i) && typeof colors[i] === 'string'){\n        this.colors.unshift(asColor.val(colors[i]).toRGBA());\n      }\n    }\n\n    let list = '';\n    $.each(this.colors, (i, color) => {\n      list += that.options.item(api.namespace, color);\n    });\n\n    console.log(list);\n\n    this.$palettes = $(this.options.template.call(this, api.namespace)).html(list).appendTo(api.$dropdown);\n\n    this.$palettes.on(api.eventName('click'), 'li', function(e) {\n      const color = $(this).data('color');\n      api.set(color);\n\n      e.preventDefault();\n      e.stopPropagation();\n    });\n\n    api.$element.on('asColorPicker::apply', (e, api, color) => {\n      if (typeof color.toRGBA !== 'function') {\n        color = color.get().color;\n      }\n\n      const rgba = color.toRGBA();\n      if ($.inArray(rgba, that.colors) === -1) {\n        if (that.colors.length >= that.options.max) {\n          that.colors.pop();\n          that.$palettes.find('li').eq(that.colors.length).remove();\n        }\n\n        that.colors.unshift(rgba);\n\n        that.$palettes.prepend(that.options.item(api.namespace, color));\n\n        if (that.options.localStorage) {\n          that.setLocal(localKey, that.colors);\n        }\n      }\n    });\n  },\n\n  setLocal: function(key, value) {\n    const jsonValue = JSON.stringify(value);\n\n    localStorage[key] = jsonValue;\n  },\n\n  getLocal: function(key) {\n    const value = localStorage[key];\n\n    return value ? JSON.parse(value) : value;\n  }\n};\n\n// preview\nvar preview = {\n  defaults: {\n    template(namespace) {\n      return `<ul class=\"${namespace}-preview\"><li class=\"${namespace}-preview-current\"><span /></li></ul>`;\n    }\n  },\n\n  init: function(api, options) {\n    const that = this;\n    this.options = $.extend(this.defaults, options);\n    this.$preview = $(this.options.template.call(that, api.namespace)).appendTo(api.$dropdown);\n    this.$current = this.$preview.find(`.${api.namespace}-preview-current span`);\n    this.$previous = this.$preview.find(`.${api.namespace}-preview-previous span`);\n\n    api.$element.on('asColorPicker::firstOpen', () => {\n      that.$previous.on('click', function() {\n        api.set($(this).data('color'));\n        return false;\n      });\n    });\n\n    api.$element.on('asColorPicker::setup', (e, api, color) => {\n      that.updateCurrent(color);\n    });\n    api.$element.on('asColorPicker::update', (e, api, color) => {\n      that.updateCurrent(color);\n    });\n  },\n\n  updateCurrent: function(color) {\n    this.$current.css('backgroundColor', color.toRGBA());\n  }\n};\n\n// gradient\nfunction conventToPercentage(n) {\n  if (n < 0) {\n    n = 0;\n  } else if (n > 1) {\n    n = 1;\n  }\n  return `${n * 100}%`;\n}\n\nvar Gradient = function(api, options) {\n  this.api = api;\n  this.options = options;\n  this.classes = {\n    enable: `${api.namespace}-gradient_enable`,\n    marker: `${api.namespace}-gradient-marker`,\n    active: `${api.namespace}-gradient-marker_active`,\n    focus: `${api.namespace}-gradient_focus`\n  };\n  this.isEnabled = false;\n  this.initialized = false;\n  this.current = null;\n  this.value = AsGradient(this.options.settings);\n  this.$doc = $(document);\n\n  const that = this;\n  $.extend(that, {\n    init() {\n      that.$wrap = $(that.options.template.call(that)).appendTo(api.$dropdown);\n\n      that.$gradient = that.$wrap.filter(`.${api.namespace}-gradient`);\n\n      this.angle.init();\n      this.preview.init();\n      this.markers.init();\n      this.wheel.init();\n\n      this.bind();\n\n      if (that.options.switchable === false || this.value.matchString(api.element.value)) {\n        that.enable();\n      }\n      this.initialized = true;\n    },\n    bind() {\n      const namespace = api.namespace;\n\n      that.$gradient.on('update', () => {\n        const current = that.value.getById(that.current);\n\n        if (current) {\n          api._trigger('update', current.color, that.value);\n        }\n\n        if (api.element.value !== that.value.toString()) {\n          api._updateInput();\n        }\n      });\n\n      // that.$gradient.on('add', function(e, data) {\n      //   if (data.stop) {\n      //     that.active(data.stop.id);\n      //     api._trigger('update', data.stop.color, that.value);\n      //     api._updateInput();\n      //   }\n      // });\n\n      if (that.options.switchable) {\n        that.$wrap.on('click', `.${namespace}-gradient-switch`, () => {\n          if (that.isEnabled) {\n            that.disable();\n          } else {\n            that.enable();\n          }\n\n          return false;\n        });\n      }\n\n      that.$wrap.on('click', `.${namespace}-gradient-cancel`, () => {\n        if (that.options.switchable === false || AsGradient.matchString(api.originValue)) {\n          that.overrideCore();\n        }\n\n        api.cancel();\n\n        return false;\n      });\n    },\n    overrideCore() {\n      api.set = value => {\n        if (value !== '') {\n          api.isEmpty = false;\n        } else {\n          api.isEmpty = true;\n        }\n        if (typeof value === 'string') {\n          if (that.options.switchable === false || AsGradient.matchString(value)) {\n            if (that.isEnabled) {\n              that.val(value);\n              api.color = that.value;\n              that.$gradient.trigger('update', that.value.value);\n            } else {\n              that.enable(value);\n            }\n          } else {\n            that.disable();\n            api.val(value);\n          }\n        } else {\n          const current = that.value.getById(that.current);\n\n          if (current) {\n            current.color.val(value);\n            api._trigger('update', current.color, that.value);\n          }\n\n          that.$gradient.trigger('update', {\n            id: that.current,\n            stop: current\n          });\n        }\n      };\n\n      api._setup = () => {\n        const current = that.value.getById(that.current);\n\n        api._trigger('setup', current.color);\n      };\n    },\n    revertCore() {\n      api.set = $.proxy(api._set, api);\n      api._setup = () => {\n        api._trigger('setup', api.color);\n      };\n    },\n    preview: {\n      init() {\n        that.$preview = that.$gradient.find(`.${api.namespace}-gradient-preview`);\n\n        that.$gradient.on('add del update empty', () => {\n          this.render();\n        });\n      },\n      render() {\n        that.$preview.css({\n          'background-image': that.value.toStringWithAngle('to right', true),\n        });\n        that.$preview.css({\n          'background-image': that.value.toStringWithAngle('to right'),\n        });\n      }\n    },\n    markers: {\n      width: 160,\n      init() {\n        that.$markers = that.$gradient.find(`.${api.namespace}-gradient-markers`).attr('tabindex', 0);\n\n        that.$gradient.on('add', (e, data) => {\n          this.add(data.stop);\n        });\n\n        that.$gradient.on('active', (e, data) => {\n          this.active(data.id);\n        });\n\n        that.$gradient.on('del', (e, data) => {\n          this.del(data.id);\n        });\n\n        that.$gradient.on('update', (e, data) => {\n          if (data.stop) {\n            this.update(data.stop.id, data.stop.color);\n          }\n        });\n\n        that.$gradient.on('empty', () => {\n          this.empty();\n        });\n\n        that.$markers.on(that.api.eventName('mousedown'), e => {\n          const rightclick = (e.which) ? (e.which === 3) : (e.button === 2);\n          if (rightclick) {\n            return false;\n          }\n\n          const position = parseFloat((e.pageX - that.$markers.offset().left) / that.markers.width, 10);\n          that.add('#fff', position);\n          return false;\n        });\n\n        /* eslint consistent-this: \"off\" */\n        let self = this;\n        that.$markers.on(that.api.eventName('mousedown'), 'li', function(e) {\n          const rightclick = (e.which) ? (e.which === 3) : (e.button === 2);\n          if (rightclick) {\n            return false;\n          }\n          self.mousedown(this, e);\n          return false;\n        });\n\n        that.$doc.on(that.api.eventName('keydown'), e => {\n          if (that.api.opened && that.$markers.is(`.${that.classes.focus}`)) {\n\n            const key = e.keyCode || e.which;\n            if (key === 46 || key === 8) {\n              if (that.value.length <= 2) {\n                return false;\n              }\n\n              that.del(that.current);\n\n              return false;\n            }\n          }\n        });\n\n        that.$markers.on(that.api.eventName('focus'), () => {\n          that.$markers.addClass(that.classes.focus);\n        }).on(that.api.eventName('blur'), () => {\n          that.$markers.removeClass(that.classes.focus);\n        });\n\n        that.$markers.on(that.api.eventName('click'), 'li', function() {\n          const id = $(this).data('id');\n          that.active(id);\n        });\n      },\n      getMarker(id) {\n        return that.$markers.find(`[data-id=\"${id}\"]`);\n      },\n      update(id, color) {\n        const $marker = this.getMarker(id);\n        $marker.find('span').css('background-color', color.toHEX());\n        $marker.find('i').css('background-color', color.toHEX());\n      },\n      add(stop) {\n        $(`<li data-id=\"${stop.id}\" style=\"left:${conventToPercentage(stop.position)}\" class=\"${that.classes.marker}\"><span style=\"background-color: ${stop.color.toHEX()}\"></span><i style=\"background-color: ${stop.color.toHEX()}\"></i></li>`).appendTo(that.$markers);\n      },\n      empty() {\n        that.$markers.html('');\n      },\n      del(id) {\n        const $marker = this.getMarker(id);\n        let $to = $marker.prev();\n        if ($to.length === 0) {\n          $to = $marker.next();\n        }\n\n        that.active($to.data('id'));\n        $marker.remove();\n      },\n      active(id) {\n        that.$markers.children().removeClass(that.classes.active);\n\n        const $marker = this.getMarker(id);\n        $marker.addClass(that.classes.active);\n\n        that.$markers.focus();\n        // that.api._trigger('apply', that.value.getById(id).color);\n      },\n      mousedown(marker, e) {\n        const self = this;\n        /* eslint consistent-this: \"off\" */\n        const id = $(marker).data('id');\n        const first = $(marker).position().left;\n        const start = e.pageX;\n        let end;\n\n        this.mousemove = function(e) {\n          end = e.pageX || start;\n          const position = (first + end - start) / this.width;\n          self.move(marker, position, id);\n          return false;\n        };\n\n        this.mouseup = function() {\n          $(document).off({\n            mousemove: this.mousemove,\n            mouseup: this.mouseup\n          });\n\n          return false;\n        };\n\n        that.$doc.on({\n          mousemove: $.proxy(this.mousemove, this),\n          mouseup: $.proxy(this.mouseup, this)\n        });\n        that.active(id);\n        return false;\n      },\n      move(marker, position, id) {\n        that.api.isEmpty = false;\n        position = Math.max(0, Math.min(1, position));\n        $(marker).css({\n          left: conventToPercentage(position)\n        });\n        if (!id) {\n          id = $(marker).data('id');\n        }\n\n        that.value.getById(id).setPosition(position);\n\n        that.$gradient.trigger('update', {\n          id: $(marker).data('id'),\n          position\n        });\n      },\n    },\n    wheel: {\n      init() {\n        that.$wheel = that.$gradient.find(`.${api.namespace}-gradient-wheel`);\n        that.$pointer = that.$wheel.find('i');\n\n        that.$gradient.on('update', (e, data) => {\n          if (typeof data.angle !== 'undefined') {\n            this.position(data.angle);\n          }\n        });\n\n        that.$wheel.on(that.api.eventName('mousedown'), e => {\n          const rightclick = (e.which) ? (e.which === 3) : (e.button === 2);\n          if (rightclick) {\n            return false;\n          }\n          this.mousedown(e, that);\n          return false;\n        });\n      },\n      mousedown(e, that) {\n        const offset = that.$wheel.offset();\n        const r = that.$wheel.width() / 2;\n        const startX = offset.left + r;\n        const startY = offset.top + r;\n        const $doc = that.$doc;\n\n        this.r = r;\n\n        this.wheelMove = e => {\n          const x = e.pageX - startX;\n          const y = startY - e.pageY;\n\n          const position = this.getPosition(x, y);\n          const angle = this.calAngle(position.x, position.y);\n          that.api.isEmpty = false;\n          that.setAngle(angle);\n        };\n        this.wheelMouseup = function() {\n          $doc.off({\n            mousemove: this.wheelMove,\n            mouseup: this.wheelMouseup\n          });\n          return false;\n        };\n        $doc.on({\n          mousemove: $.proxy(this.wheelMove, this),\n          mouseup: $.proxy(this.wheelMouseup, this)\n        });\n\n        this.wheelMove(e);\n      },\n      getPosition(a, b) {\n        const r = this.r;\n        const x = a / Math.sqrt(a * a + b * b) * r;\n        const y = b / Math.sqrt(a * a + b * b) * r;\n        return {\n          x,\n          y\n        };\n      },\n      calAngle(x, y) {\n        const deg = Math.round(Math.atan(Math.abs(x / y)) * (180 / Math.PI));\n        if (x < 0 && y > 0) {\n          return 360 - deg;\n        }\n        if (x < 0 && y <= 0) {\n          return deg + 180;\n        }\n        if (x >= 0 && y <= 0) {\n          return 180 - deg;\n        }\n        if (x >= 0 && y > 0) {\n          return deg;\n        }\n      },\n      set(value) {\n        that.value.angle(value);\n        that.$gradient.trigger('update', {\n          angle: value\n        });\n      },\n      position(angle) {\n        const r = this.r || that.$wheel.width() / 2;\n        const pos = this.calPointer(angle, r);\n        that.$pointer.css({\n          left: pos.x,\n          top: pos.y\n        });\n      },\n      calPointer(angle, r) {\n        const x = Math.sin(angle * Math.PI / 180) * r;\n        const y = Math.cos(angle * Math.PI / 180) * r;\n        return {\n          x: r + x,\n          y: r - y\n        };\n      }\n    },\n    angle: {\n      init() {\n        that.$angle = that.$gradient.find(`.${api.namespace}-gradient-angle`);\n\n        that.$angle.on(that.api.eventName('blur'), function() {\n          that.setAngle(this.value);\n          return false;\n        }).on(that.api.eventName('keydown'), function(e) {\n          const key = e.keyCode || e.which;\n          if (key === 13) {\n            that.api.isEmpty = false;\n            $(this).blur();\n            return false;\n          }\n        });\n\n        that.$gradient.on('update', (e, data) => {\n          if (typeof data.angle !== 'undefined') {\n            that.$angle.val(data.angle);\n          }\n        });\n      },\n      set(value) {\n        that.value.angle(value);\n        that.$gradient.trigger('update', {\n          angle: value\n        });\n      }\n    }\n  });\n\n  this.init();\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n\n  enable(value) {\n    if (this.isEnabled === true) {\n      return;\n    }\n    this.isEnabled = true;\n    this.overrideCore();\n\n\n\n    this.$gradient.addClass(this.classes.enable);\n    this.markers.width = this.$markers.width();\n\n    if (typeof value === 'undefined') {\n      value = this.api.element.value;\n    }\n\n    if (value !== '') {\n      this.api.isEmpty = false;\n    } else {\n      this.api.isEmpty = true;\n    }\n\n    if (!AsGradient.matchString(value) && this._last) {\n      this.value = this._last;\n    } else {\n      this.val(value);\n    }\n    this.api.color = this.value;\n\n    this.$gradient.trigger('update', this.value.value);\n\n    if (this.api.opened) {\n      this.api.position();\n    }\n  },\n  val(string) {\n    if (string !== '' && this.value.toString() === string) {\n      return;\n    }\n    this.empty();\n    this.value.val(string);\n    this.value.reorder();\n\n    if (this.value.length < 2) {\n      let fill = string;\n\n      if (!AsColor.matchString(string)) {\n        fill = 'rgba(0,0,0,1)';\n      }\n\n      if (this.value.length === 0) {\n        this.value.append(fill, 0);\n      }\n      if (this.value.length === 1) {\n        this.value.append(fill, 1);\n      }\n    }\n\n    let stop;\n    for (let i = 0; i < this.value.length; i++) {\n      stop = this.value.get(i);\n      if (stop) {\n        this.$gradient.trigger('add', {\n          stop\n        });\n      }\n    }\n\n    this.active(stop.id);\n  },\n  disable() {\n    if (this.isEnabled === false) {\n      return;\n    }\n    this.isEnabled = false;\n    this.revertCore();\n\n    this.$gradient.removeClass(this.classes.enable);\n    this._last = this.value;\n    this.api.color = this.api.color.getCurrent().color;\n    this.api.set(this.api.color.value);\n\n    if (this.api.opened) {\n      this.api.position();\n    }\n  },\n  active(id) {\n    if (this.current !== id) {\n      this.current = id;\n      this.value.setCurrentById(id);\n\n      this.$gradient.trigger('active', {\n        id\n      });\n    }\n  },\n  empty() {\n    this.value.empty();\n    this.$gradient.trigger('empty');\n  },\n  add(color, position) {\n    const stop = this.value.insert(color, position);\n    this.api.isEmpty = false;\n    this.value.reorder();\n\n    this.$gradient.trigger('add', {\n      stop\n    });\n\n    this.active(stop.id);\n\n    this.$gradient.trigger('update', {\n      stop\n    });\n    return stop;\n  },\n  del(id) {\n    if (this.value.length <= 2) {\n      return;\n    }\n    this.value.removeById(id);\n    this.value.reorder();\n    this.$gradient.trigger('del', {\n      id\n    });\n\n    this.$gradient.trigger('update', {});\n  },\n  setAngle(value) {\n    this.value.angle(value);\n    this.$gradient.trigger('update', {\n      angle: value\n    });\n  }\n};\n\n\nvar gradient = {\n  defaults: {\n    switchable: true,\n    switchText: 'Gradient',\n    cancelText: 'Cancel',\n    settings: {\n      forceStandard: true,\n      angleUseKeyword: true,\n      emptyString: '',\n      degradationFormat: false,\n      cleanPosition: false,\n      color: {\n        format: 'rgb' // rgb, rgba, hsl, hsla, hex\n      }\n    },\n    template() {\n      const namespace = this.api.namespace;\n      let control = `<div class=\"${namespace}-gradient-control\">`;\n      if (this.options.switchable) {\n        control += `<a href=\"#\" class=\"${namespace}-gradient-switch\">${this.options.switchText}</a>`;\n      }\n      control += `<a href=\"#\" class=\"${namespace}-gradient-cancel\">${this.options.cancelText}</a></div>`;\n\n      return `${control}<div class=\"${namespace}-gradient\"><div class=\"${namespace}-gradient-preview\"><ul class=\"${namespace}-gradient-markers\"></ul></div><div class=\"${namespace}-gradient-wheel\"><i></i></div><input class=\"${namespace}-gradient-angle\" type=\"text\" value=\"\" size=\"3\" /></div>`;\n    }\n  },\n\n  init: function(api, options) {\n    const that = this;\n\n    api.$element.on('asColorPicker::ready', (event, instance) => {\n      if (instance.options.mode !== 'gradient') {\n        return;\n      }\n\n      that.defaults.settings.color = api.options.color;\n      options = $.extend(true, that.defaults, options);\n\n      api.gradient = new Gradient(api, options);\n    });\n  }\n};\n\nconst NAMESPACE$1 = 'asColorPicker';\nconst COMPONENTS = {};\nconst LOCALIZATIONS = {\n  en: {\n    cancelText: 'cancel',\n    applyText: 'apply'\n  }\n};\n\nlet id = 0;\n\nfunction createId(api) {\n  api.id = id;\n  id++;\n}\n\nclass AsColorPicker {\n  constructor(element, options) {\n    this.element = element;\n    this.$element = $$1(element);\n\n    //flag\n    this.opened = false;\n    this.firstOpen = true;\n    this.disabled = false;\n    this.initialed = false;\n    this.originValue = this.element.value;\n    this.isEmpty = false;\n    this.expecificLayout = '';\n\n    createId(this);\n\n    this.options = $$1.extend(true, {}, DEFAULTS, options, this.$element.data());\n    this.namespace = this.options.namespace;\n\n    this.classes = {\n      wrap: `${this.namespace}-wrap`,\n      dropdown: `${this.namespace}-dropdown`,\n      input: `${this.namespace}-input`,\n      skin: `${this.namespace}_${this.options.skin}`,\n      open: `${this.namespace}_open`,\n      mask: `${this.namespace}-mask`,\n      hideInput: `${this.namespace}_hideInput`,\n      disabled: `${this.namespace}_disabled`,\n      mode: `${this.namespace}-mode_${this.options.mode}`\n    };\n\n    if (this.options.hideInput) {\n      this.$element.addClass(this.classes.hideInput);\n    }\n\n    this.components = MODES[this.options.mode];\n    this._components = $$1.extend(true, {}, COMPONENTS);\n\n    this._trigger('init');\n    this.init();\n  }\n\n  _trigger(eventType, ...params) {\n    let data = [this].concat(params);\n\n    // event\n    this.$element.trigger(`${NAMESPACE$1}::${eventType}`, data);\n\n    // callback\n    eventType = eventType.replace(/\\b\\w+\\b/g, (word) => {\n      return word.substring(0, 1).toUpperCase() + word.substring(1);\n    });\n    let onFunction = `on${eventType}`;\n\n    if (typeof this.options[onFunction] === 'function') {\n      this.options[onFunction].apply(this, params);\n    }\n  }\n\n  eventName(events) {\n    if (typeof events !== 'string' || events === '') {\n      return `.${this.options.namespace}`;\n    }\n    events = events.split(' ');\n\n    let length = events.length;\n    for (let i = 0; i < length; i++) {\n      events[i] = `${events[i]}.${this.options.namespace}`;\n    }\n    return events.join(' ');\n  }\n\n  init() {\n    this.color = AsColor(this.element.value, this.options.color);\n\n    this._create();\n\n    if (this.options.skin) {\n      this.$dropdown.addClass(this.classes.skin);\n      this.$element.parent().addClass(this.classes.skin);\n    }\n\n    if (this.options.readonly) {\n      this.$element.prop('readonly', true);\n    }\n\n    this._bindEvent();\n\n    this.initialed = true;\n    this._trigger('ready');\n  }\n\n  _create() {\n    this.$dropdown = $$1(`<div class=\"${this.classes.dropdown}\" data-mode=\"${this.options.mode}\"></div>`);\n    this.$element.wrap(`<div class=\"${this.classes.wrap}\"></div>`).addClass(this.classes.input);\n\n    this.$wrap = this.$element.parent();\n    this.$body = $$1('body');\n\n    this.$dropdown.data(NAMESPACE$1, this);\n\n    let component;\n    let currentDropdown = this.$dropdown;\n    $$1.each(this.components, (key, options) => {\n\n      if (options === true) {\n        options = {};\n      }\n\n      if (this.options[key] !== undefined) {\n        options = $$1.extend(true, {}, options, this.options[key]);\n      }\n\n      this.$dropdown = Layouts.createByModesName(this.options.mode, key, this.$dropdown, currentDropdown);\n\n      if (Object.hasOwnProperty.call(this._components, key)) {\n        component = this._components[key];\n        component.init(this, options);\n      }\n\n      this.$dropdown = currentDropdown;\n\n    });\n      \n    this.$dropdown.addClass(this.options.mode);\n\n    this._trigger('create');\n  }\n\n  _bindEvent() {\n    this.$element.on(this.eventName('click'), () => {\n      if (!this.opened) {\n        this.open();\n      }\n      return false;\n    });\n\n    this.$element.on(this.eventName('keydown'), (e) => {\n      if (e.keyCode === 9) {\n        this.close();\n      } else if (e.keyCode === 13) {\n        this.val(this.element.value);\n        this.close();\n      }\n    });\n\n    this.$element.on(this.eventName('keyup'), () => {\n      if (this.color.matchString(this.element.value)) {\n        this.val(this.element.value);\n      }\n    });\n  }\n\n  opacity(v) {\n    if (v) {\n      this.color.alpha(v);\n    } else {\n      return this.color.alpha();\n    }\n  }\n\n  position() {\n    const hidden = !this.$element.is(':visible');\n    const offset = hidden ? this.$trigger.offset() : this.$element.offset();\n    const height = hidden ? this.$trigger.outerHeight() : this.$element.outerHeight();\n    const width = hidden ? this.$trigger.outerWidth() : this.$element.outerWidth() + this.$trigger.outerWidth();\n    const pickerWidth = this.$dropdown.outerWidth(true);\n    const pickerHeight = this.$dropdown.outerHeight(true);\n    let top = ((offset.top + height ) - (this.$trigger.height()));\n    let left = ((offset.left + width) + (this.$trigger.width()/2));\n\n    this.$dropdown.addClass(`${this.classes.dropdown}-triangle-left`);\n\n    this.$dropdown.css({\n      position: 'absolute',\n      top,\n      left\n    });\n  }\n\n  open() {\n    if (this.disabled) {\n      return;\n    }\n    this.originValue = this.element.value;\n\n    if (this.$dropdown[0] !== this.$body.children().last()[0]) {\n      this.$dropdown.detach().appendTo(this.$body);\n    }\n\n    this.$mask = $$1(`.${this.classes.mask}`);\n    if (this.$mask.length === 0) {\n      this.createMask();\n    }\n\n    // ensure the mask is always right before the dropdown\n    if (this.$dropdown.prev()[0] !== this.$mask[0]) {\n      this.$dropdown.before(this.$mask);\n    }\n\n    $$1(\"#asColorPicker-dropdown\").removeAttr(\"id\");\n    this.$dropdown.attr(\"id\", \"asColorPicker-dropdown\");\n\n    // show the mask\n    this.$mask.show();\n\n    this.position();\n\n    $$1(window).on(this.eventName('resize'), $$1.proxy(this.position, this));\n\n    this.$dropdown.addClass(this.classes.open);\n\n    this.opened = true;\n\n    if (this.firstOpen) {\n      this.firstOpen = false;\n      this._trigger('firstOpen');\n    }\n    this._setup();\n    this._trigger('open');\n  }\n\n  createMask() {\n    this.$mask = $$1(document.createElement(\"div\"));\n    this.$mask.attr(\"class\", this.classes.mask);\n    this.$mask.hide();\n    this.$mask.appendTo(this.$body);\n\n    this.$mask.on(this.eventName(\"mousedown touchstart click\"), e => {\n      const $dropdown = $$1(\"#asColorPicker-dropdown\");\n      let self;\n      if ($dropdown.length > 0) {\n        self = $dropdown.data(NAMESPACE$1);\n        if (self.opened) {\n          if (self.options.hideFireChange) {\n            self.apply();\n          } else {\n            self.cancel();\n          }\n        }\n\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    });\n  }\n\n  close() {\n    this.opened = false;\n    this.$element.blur();\n    this.$mask.hide();\n\n    this.$dropdown.removeClass(this.classes.open);\n\n    $$1(window).off(this.eventName('resize'));\n\n    this._trigger('close');\n  }\n\n  clear() {\n    this.val('');\n  }\n\n  cancel() {\n    this.close();\n\n    this.set(this.originValue);\n  }\n\n  apply() {\n    this._trigger('apply', this.color);\n    this.close();\n  }\n\n  val(value) {\n    if (typeof value === 'undefined') {\n      return this.color.toString();\n    }\n\n    this.set(value);\n  }\n\n  _update() {\n    this._trigger('update', this.color);\n    this._updateInput();\n  }\n\n  _updateInput() {\n    let value = this.color.toString();\n    if (this.isEmpty) {\n      value = '';\n    }\n    this._trigger('change', value);\n    this.$element.val(value);\n  }\n\n  set(value) {\n    if (value !== '') {\n      this.isEmpty = false;\n    } else {\n      this.isEmpty = true;\n    }\n    return this._set(value);\n  }\n\n  _set(value) {\n    if (typeof value === 'string') {\n      this.color.val(value);\n    } else {\n      this.color.set(value);\n    }\n\n    this._update();\n  }\n\n  _setup() {\n    this._trigger('setup', this.color);\n  }\n\n  get() {\n    return this.color;\n  }\n\n  enable() {\n    this.disabled = false;\n    this.$parent.addClass(this.classes.disabled);\n    this._trigger('enable');\n    return this;\n  }\n\n  disable() {\n    this.disabled = true;\n    this.$parent.removeClass(this.classes.disabled);\n    this._trigger('disable');\n    return this;\n  }\n\n  destroy() {\n    this.$element.unwrap();\n    this.$element.off(this.eventName());\n    this.$mask.remove();\n    this.$dropdown.remove();\n\n    this.initialized = false;\n    this.$element.data(NAMESPACE$1, null);\n\n    this._trigger('destroy');\n    return this;\n  }\n\n  getString(name, def) {\n    if(this.options.lang in LOCALIZATIONS && typeof LOCALIZATIONS[this.options.lang][name] !== 'undefined') {\n      return LOCALIZATIONS[this.options.lang][name];\n    }\n    return def;\n  }\n\n  static setLocalization(lang, strings) {\n    LOCALIZATIONS[lang] = strings;\n  }\n\n  static registerComponent(name, method) {\n    COMPONENTS[name] = method;\n  }\n\n  static setDefaults(options) {\n    $$1.extend(true, DEFAULTS, $$1.isPlainObject(options) && options);\n  }\n}\n\nAsColorPicker.registerComponent('alpha', alpha);\nAsColorPicker.registerComponent('hex', hex);\nAsColorPicker.registerComponent('hue', hue);\nAsColorPicker.registerComponent('saturation', saturation);\nAsColorPicker.registerComponent('buttons', buttons);\nAsColorPicker.registerComponent('trigger', trigger);\nAsColorPicker.registerComponent('clear', clear);\nAsColorPicker.registerComponent('info', info);\nAsColorPicker.registerComponent('palettes', palettes);\nAsColorPicker.registerComponent('preview', preview);\nAsColorPicker.registerComponent('gradient', gradient);\n\n// Spanish (es) localization\nAsColorPicker.setLocalization('es', {\n  cancelText: \"Cancelar\",\n  applyText: \"Elegir\"\n});\n\n// Brazil (pt-br) localization\nAsColorPicker.setLocalization('pt-br', {\n  cancelText: \"Cancelar\",\n  applyText: \"Concluído\"\n});\n\nvar info$1 = {\n  version:'0.4.16'\n};\n\nconst NAMESPACE = 'asColorPicker';\nconst OtherAsColorPicker = $$1.fn.asColorPicker;\n\nconst jQueryAsColorPicker = function(options, ...args) {\n  if (typeof options === 'string') {\n    const method = options;\n\n    if (/^_/.test(method)) {\n      return false;\n    } else if ((/^(get)$/.test(method)) || (method === 'val' && args.length === 0)) {\n      const instance = this.first().data(NAMESPACE);\n      if (instance && typeof instance[method] === 'function') {\n        return instance[method](...args);\n      }\n    } else {\n      return this.each(function() {\n        const instance = $$1.data(this, NAMESPACE);\n        if (instance && typeof instance[method] === 'function') {\n          instance[method](...args);\n        }\n      });\n    }\n  }\n\n  return this.each(function() {\n    if (!$$1(this).data(NAMESPACE)) {\n      $$1(this).data(NAMESPACE, new AsColorPicker(this, options));\n    }\n  });\n};\n\n$$1.fn.asColorPicker = jQueryAsColorPicker;\n\n$$1.asColorPicker = $$1.extend({\n  setDefaults: AsColorPicker.setDefaults,\n  registerComponent: AsColorPicker.registerComponent,\n  setLocalization: AsColorPicker.setLocalization,\n  noConflict: function() {\n    $$1.fn.asColorPicker = OtherAsColorPicker;\n    return jQueryAsColorPicker;\n  }\n}, info$1);\n"]}